name: NABS Workflow (PyYPSH Setup)

on:
  release:
    types: [published]

jobs:
  release-python-file:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name || github.ref }}

      - name: Rename
        shell: bash
        run: |
          mv ypsh-setup.py SETUP-python-3.py

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: SETUP-python-3.py
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  release-binary-files:
    continue-on-error: true
    strategy:
      matrix:
        include:
          - os: macos-13
            platform: macOS Intel
            filename: SETUP-macos-amd64
          - os: ubuntu-22.04
            platform: Linux Intel/AMD
            filename: SETUP-linux-amd64
          - os: windows-2022
            platform: Windows Intel/AMD
            filename: SETUP-windows-amd64
          - os: macos-14
            platform: macOS Apple Silicon
            filename: SETUP-macos-arm64
          - os: ubuntu-22.04-arm
            platform: Linux ARM
            filename: SETUP-linux-arm64
          - os: windows-11-arm
            platform: Windows ARM
            filename: SETUP-windows-arm64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name || github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Update pip and Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install rich zstandard

      - name: Set Nuitka options
        shell: bash
        run: |
          echo 'NUITKA_EXTRA_OPTIONS=--enable-plugin=pyside6 --include-qt-plugins=platforms' >> "$GITHUB_ENV"

      - name: Build (non-windows)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          python build.py -f ypsh-setup.py -m pyinstaller -d PySide6,requests -o upload/${{ matrix.filename }}
          python build.py -f ypsh-setup.py -m nuitka -d PySide6,requests -o upload/${{ matrix.filename }}-NUI

      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          python build.py -f ypsh-setup.py -m pyinstaller -d PySide6,requests -o upload/${{ matrix.filename }}.exe
          python build.py -f ypsh-setup.py -m nuitka -d PySide6,requests -o upload/${{ matrix.filename }}-NUI.exe

      - name: Zip (non-windows)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          cd upload
          zip "${{ matrix.filename }}.zip" "${{ matrix.filename }}"
          zip "${{ matrix.filename }}-NUI.zip" "${{ matrix.filename }}-NUI"

      - name: Zip (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path "upload/${{ matrix.filename }}.exe" -DestinationPath "upload/${{ matrix.filename }}.zip"
          Compress-Archive -Path "upload/${{ matrix.filename }}-NUI.exe" -DestinationPath "upload/${{ matrix.filename }}-NUI.zip"

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: upload/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
